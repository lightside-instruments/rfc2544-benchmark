==RFC2544 benchmark==

This project implements RFC2544 network interconnect device benchmark in Python.

       +-----------------+     
  eth0 |                 | eth1
    +-<|TG   tester0   TA|<-+
    |  |                 |  |
    |  +-----------------+  |
    |                       |
    |  +-----------------+  |
    |  |      dut0       |  |
    +->|       ->        |>-+
  eth0 |                 | eth1
       +-----------------+


The example directory contains configuration file and the resulting log.txt and
from the run:

cd example
../rfc2544-benchmark --config=config.xml --dst-node=tester0 --dst-node-interface=eth1 \
--src-node=tester0 --src-node-interface=eth0 --dst-mac-address="70:B3:D5:EC:20:01" \
--src-mac-address="70:B3:D5:EC:20:00" --dst-ipv4-address="192.0.2.2" --src-ipv4-udp-port=49184 \
--src-ipv4-address="192.0.2.1" --frame-size=64 --trial-time=120 --speed=1000000000 \
| tee log.txt | grep "^#"

#===Throughput===
#1 1488095.238095 pps, 20 octets interframe gap, 100.00% ... 2976190 / 2976190
#Result: 1488095.238095 pps
#===Latency===
#Measurement style - bit forwarding
#1 22680 ns (min=4984 ns, max=22680 ns) ... 2976190 / 2976190
#2 22680 ns (min=4984 ns, max=22680 ns) ... 2976190 / 2976190
#3 22552 ns (min=4984 ns, max=22552 ns) ... 2976190 / 2976190
#4 22536 ns (min=4984 ns, max=22536 ns) ... 2976190 / 2976190
#5 22192 ns (min=4976 ns, max=22192 ns) ... 2976190 / 2976190
#6 22496 ns (min=4976 ns, max=22496 ns) ... 2976190 / 2976190
#7 22320 ns (min=4976 ns, max=22320 ns) ... 2976190 / 2976190
#8 22688 ns (min=4976 ns, max=22688 ns) ... 2976190 / 2976190
#9 22152 ns (min=4984 ns, max=22152 ns) ... 2976190 / 2976190
#10 22536 ns (min=4984 ns, max=22536 ns) ... 2976190 / 2976190
#11 21936 ns (min=4992 ns, max=21936 ns) ... 2976190 / 2976190
#12 22712 ns (min=4984 ns, max=22712 ns) ... 2976190 / 2976190
#13 22496 ns (min=4976 ns, max=22496 ns) ... 2976190 / 2976190
#14 22232 ns (min=4984 ns, max=22232 ns) ... 2976190 / 2976190
#15 22296 ns (min=4984 ns, max=22296 ns) ... 2976190 / 2976190
#16 22648 ns (min=4984 ns, max=22648 ns) ... 2976190 / 2976190
#17 22144 ns (min=4976 ns, max=22144 ns) ... 2976190 / 2976190
#18 22192 ns (min=4992 ns, max=22192 ns) ... 2976190 / 2976190
#19 22200 ns (min=4984 ns, max=22200 ns) ... 2976190 / 2976190
#20 22392 ns (min=4984 ns, max=22392 ns) ... 2976190 / 2976190
#Result: 22404.000000 nanoseconds
#===Frame loss rate===
#1 100% rate, 0% loss, (100.000000% rate actual), 1488095.238095 pps (1488095.238095 pps actual), 20 octets interframe gap ... 2976190 / 2976190
#2 90% rate, 0% loss, (89.361702% rate actual), 1339285.714286 pps (1329787.234043 pps actual), 30 octets interframe gap ... 2659574 / 2659574
#===Back to back frames===
#1 2 back-to-back frames ... 2 / 2
#2 4 back-to-back frames ... 4 / 4
#3 8 back-to-back frames ... 8 / 8
#4 16 back-to-back frames ... 16 / 16
#5 32 back-to-back frames ... 32 / 32
#6 64 back-to-back frames ... 64 / 64
#7 128 back-to-back frames ... 128 / 128
#8 256 back-to-back frames ... 256 / 256
#9 512 back-to-back frames ... 512 / 512
#10 1024 back-to-back frames ... 1024 / 1024
#11 2048 back-to-back frames ... 2048 / 2048
#12 4096 back-to-back frames ... 4096 / 4096
#13 8192 back-to-back frames ... 8192 / 8192
#14 16384 back-to-back frames ... 16384 / 16384
#15 32768 back-to-back frames ... 32768 / 32768
#16 65536 back-to-back frames ... 65536 / 65536
#17 131072 back-to-back frames ... 131072 / 131072
#18 262144 back-to-back frames ... 262144 / 262144
#19 524288 back-to-back frames ... 524288 / 524288
#20 1048576 back-to-back frames ... 1048576 / 1048576
#21 1488095 back-to-back frames ... 1488095 / 1488095
#The back to back search is limited to bursts below 1 second.
#Result: >= 1488095
#===System recovery===
#TODO
#===Reset===
#TODO
